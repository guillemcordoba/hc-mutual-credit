{"version":3,"file":"hc-mutual-credit.es5.js","sources":["../src/graphql/queries.ts","../src/elements/sharedStyles.ts","../src/elements/hcmc-create-offer.ts","../src/elements/hcmc-pending-offer-list.ts","../src/elements/hcmc-transaction-list.ts","../src/graphql/schema.ts","../src/bindings.ts","../src/graphql/resolvers.ts","../src/elements/hcmc-offer-detail.ts","../src/types.ts","../src/elements/hcmc-allowed-creditor-list.ts","../src/mutual-credit.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_MY_BALANCE = gql`\n  query GetMyBalance {\n    myBalance\n  }\n`;\n\nexport const GET_MY_TRANSACTIONS = gql`\n  query GetMyTransactions {\n    me {\n      id\n    }\n    myTransactions {\n      id\n      debtor {\n        id\n        username\n      }\n      creditor {\n        id\n        username\n      }\n      amount\n      timestamp\n    }\n  }\n`;\n\nexport const GET_PENDING_OFFERS = gql`\n  query GetPendingOffers {\n    me {\n      id\n    }\n    myOffers {\n      id\n      transaction {\n        id\n        debtor {\n          id\n          username\n        }\n        creditor {\n          id\n          username\n        }\n        amount\n        timestamp\n      }\n      state\n    }\n  }\n`;\n\nexport const GET_OFFER_DETAIL = gql`\n  query GetOfferDetail($transactionId: String!) {\n    me {\n      id\n    }\n    \n    offer(transactionId: $transactionId) {\n      id\n      transaction {\n        id\n        debtor {\n          id\n          username\n        }\n        creditor {\n          id\n          username\n        }\n        amount\n        timestamp\n      }\n\n      counterpartySnapshot {\n        executable\n        valid\n        balance\n        lastHeaderId\n      }\n\n      state\n    }\n  }\n`;\n\nexport const CREATE_OFFER = gql`\n  mutation CreateOffer($creditorId: ID!, $amount: Float!) {\n    createOffer(creditorId: $creditorId, amount: $amount)\n  }\n`;\n\nexport const ACCEPT_OFFER = gql`\n  mutation AcceptOffer($transactionId: ID!, $approvedHeaderId: ID!) {\n    acceptOffer(\n      transactionId: $transactionId\n      approvedHeaderId: $approvedHeaderId\n    )\n  }\n`;\n","import { css } from 'lit-element';\n\nexport const sharedStyles = css`\n  .column {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .fill {\n    flex: 1;\n  }\n\n  .center-content {\n    justify-content: center;\n    align-items: center;\n  }\n\n  .item {\n    margin-bottom: 8px;\n  }\n\n  .padding {\n    padding: 16px;\n  }\n\n  .title {\n    font-weight: bold;\n    font-size: 18px;\n  }\n`;\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property, query } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { CREATE_OFFER } from 'src/graphql/queries';\n\nimport '@material/mwc-textfield';\nimport '@material/mwc-button';\nimport { TextFieldBase } from '@material/mwc-textfield/mwc-textfield-base';\nimport { sharedStyles } from './sharedStyles';\n\nexport class MCCreateOffer extends moduleConnect(LitElement) {\n  @query('#amount')\n  amountField!: TextFieldBase;\n\n  @query('#creditor')\n  creditorField!: TextFieldBase;\n\n  @property({ type: Boolean })\n  open: boolean = false;\n\n  @property({ type: String })\n  creditor: string | undefined = undefined;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n  }\n\n  createOffer() {\n    this.client.mutate({\n      mutation: CREATE_OFFER,\n      variables: {\n        creditorId: this.creditorField.value,\n        amount: parseFloat(this.amountField.value),\n      },\n    });\n  }\n\n  render() {\n    return html`\n      <div class=\"column center-content\">\n        <mwc-textfield\n          style=\"padding: 16px 0;\"\n          label=\"Amount\"\n          type=\"number\"\n          id=\"amount\"\n          min=\"0.1\"\n          step=\"0.1\"\n          autoValidate\n        ></mwc-textfield>\n\n        <mwc-textfield\n          .disabled=${this.creditor !== undefined}\n          .value=${this.creditor}\n          style=\"padding-bottom: 16px;\"\n          id=\"creditor\"\n          label=\"Creditor\"\n          autoValidate\n        ></mwc-textfield>\n\n        <mwc-button\n          label=\"CREATE OFFER\"\n          raised\n          @click=${() => this.createOffer()}\n        ></mwc-button>\n      </div>\n    `;\n  }\n}\n","import { LitElement, html, property } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\nimport { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { ApolloClientModule } from '@uprtcl/graphql';\n\nimport '@material/mwc-list';\nimport '@authentic/mwc-circular-progress';\n\nimport { GET_PENDING_OFFERS } from '../graphql/queries';\nimport { Offer } from 'src/types';\nimport { sharedStyles } from './sharedStyles';\nimport { Agent } from 'holochain-profiles';\n\nexport class MCPendingOfferList extends moduleConnect(LitElement) {\n  client!: ApolloClient<any>;\n\n  @property({ type: String })\n  myAgentId!: string;\n\n  @property({ type: Object, attribute: false })\n  offers!: Offer[];\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: GET_PENDING_OFFERS,\n    });\n\n    this.myAgentId = result.data.me.id;\n    this.offers = result.data.myOffers.filter((o) => o.state !== 'Completed');\n  }\n\n  renderPlaceholder(type: string) {\n    return html`<span style=\"padding-top: 16px;\"\n      >You have no ${type.toLowerCase()} offers</span\n    >`;\n  }\n\n  offerSelected(transactionId: string) {\n    this.dispatchEvent(\n      new CustomEvent('offer-selected', {\n        detail: { transactionId, composed: true, bubbles: true },\n      })\n    );\n  }\n\n  getPendingOffers() {\n    return this.offers.filter((offer) => offer.state !== 'Completed');\n  }\n\n  getOutgoing(): Offer[] {\n    return this.offers.filter(\n      (offer) => offer.transaction.debtor.id === this.myAgentId\n    );\n  }\n\n  getIncoming(): Offer[] {\n    return this.offers.filter(\n      (offer) => offer.transaction.creditor.id === this.myAgentId\n    );\n  }\n\n  counterparty(offer: Offer): Agent {\n    return offer.transaction.creditor.id === this.myAgentId\n      ? offer.transaction.debtor\n      : offer.transaction.creditor;\n  }\n\n  renderOfferList(title: string, offers: Offer[]) {\n    return html`<div class=\"column\" style=\"margin-bottom: 24px;\">\n      <span class=\"title\">${title} offers</span>\n\n      ${offers.length === 0\n        ? this.renderPlaceholder(title)\n        : html`\n            <mwc-list>\n              ${offers.map(\n                (offer) => html`\n                  <mwc-list-item\n                    @click=${() => this.offerSelected(offer.id)}\n                    twoline\n                  >\n                    <span>\n                      @${this.counterparty(offer).username}\n                      ${offer.transaction.amount} credits\n                    </span>\n                    <span slot=\"secondary\">\n                      ${new Date(\n                        offer.transaction.timestamp * 1000\n                      ).toLocaleDateString()}\n                    </span>\n                  </mwc-list-item>\n                `\n              )}\n            </mwc-list>\n          `}\n    </div>`;\n  }\n\n  render() {\n    if (!this.offers)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    return html`<div class=\"column\">\n      ${this.renderOfferList('Incoming', this.getIncoming())}\n      ${this.renderOfferList('Outgoing', this.getOutgoing())}\n    </div>`;\n  }\n}\n","import { LitElement, property, html } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\n\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { moduleConnect } from '@uprtcl/micro-orchestrator';\n\nimport '@material/mwc-top-app-bar';\nimport '@material/mwc-list';\nimport '@authentic/mwc-circular-progress';\n\nimport { GET_MY_TRANSACTIONS } from '../graphql/queries';\nimport { Transaction } from '../types';\nimport { Agent } from 'holochain-profiles';\nimport { sharedStyles } from './sharedStyles';\n\nexport class MCTransactionList extends moduleConnect(LitElement) {\n  @property({ type: String })\n  myAgentId!: string;\n\n  @property({ type: Object, attribute: false })\n  transactions!: Array<Transaction>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async firstUpdated() {\n    const client: ApolloClient<any> = this.request(\n      ApolloClientModule.bindings.Client\n    );\n    const result = await client.query({\n      query: GET_MY_TRANSACTIONS,\n    });\n\n    this.myAgentId = result.data.me.id;\n    this.transactions = result.data.myTransactions;\n  }\n\n  isOutgoing(transaction: Transaction) {\n    return transaction.debtor.id === this.myAgentId;\n  }\n\n  getCounterparty(transaction: Transaction): Agent {\n    return transaction.creditor.id === this.myAgentId\n      ? transaction.debtor\n      : transaction.creditor;\n  }\n\n  render() {\n    return html`<div class=\"column center-content\">\n      ${this.renderContent()}\n    </div>`;\n  }\n\n  renderContent() {\n    if (!this.transactions)\n      return html`\n        <div class=\"padding center-content\">\n          <mwc-circular-progress></mwc-circular-progress>\n        </div>\n      `;\n\n    if (this.transactions.length === 0)\n      return html`<div class=\"padding\">\n        <span>You have no transactions in your history</span>\n      </div>`;\n\n    return html`\n      <mwc-list>\n        ${this.transactions.map(\n          (transaction) => html`\n            <mwc-list-item twoline noninteractive>\n              <span>\n                ${this.isOutgoing(transaction) ? 'To ' : 'From '}\n                @${this.getCounterparty(transaction).username}\n                (${this.getCounterparty(transaction).id}):\n                ${`${this.isOutgoing(transaction) ? '-' : '+'}${\n                  transaction.amount\n                }`}\n                credits\n              </span>\n              <span slot=\"secondary\"\n                >${new Date(\n                  transaction.timestamp * 1000\n                ).toLocaleDateString()}</span\n              >\n            </mwc-list-item>\n            <mwc-list-divider></mwc-list-divider>\n          `\n        )}\n      </mwc-list>\n    `;\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const mutualCreditTypeDefs = gql`\n  scalar Date\n\n  enum OfferState {\n    Received\n    Pending\n    Declined\n    Approved\n    Completed\n  }\n\n  type Transaction {\n    id: ID!\n\n    debtor: Agent!\n    creditor: Agent!\n    amount: Float!\n    timestamp: Date!\n  }\n\n  type CounterpartySnapshot {\n    executable: Boolean!\n    balance: Float!\n    valid: Boolean!\n    lastHeaderId: ID!\n  }\n\n  type Offer {\n    id: ID!\n\n    transaction: Transaction!\n\n    counterpartySnapshot: CounterpartySnapshot\n\n    state: OfferState!\n  }\n\n  extend type Query {\n    myTransactions: [Transaction!]!\n    myOffers: [Offer!]!\n    myBalance: Float!\n    offer(transactionId: ID!): Offer!\n  }\n\n  extend type Mutation {\n    createOffer(creditorId: ID!, amount: Float!): ID!\n    declineOffer(transactionId: ID!): ID!\n    acceptOffer(transactionId: ID!, approvedHeaderId: ID!): ID!\n  }\n`;\n","export const MutualCreditBindings = {\n  MutualCreditProvider: 'mutual-credit-provider',\n  ValidAgentFilter: 'valid-agent-filter',\n};\n","import { HolochainProvider } from '@uprtcl/holochain-provider';\n\nimport { MutualCreditBindings } from '../bindings';\n\nfunction offerToTransaction(id, offer) {\n  const state = offer.state;\n  return {\n    id,\n    transaction: {\n      id,\n      ...offer.transaction,\n    },\n    state: typeof state === 'object' ? Object.keys(state)[0] : state,\n  };\n}\n\nexport const resolvers = {\n  Transaction: {\n    creditor(parent) {\n      return { id: parent.creditor_address };\n    },\n    debtor(parent) {\n      return { id: parent.debtor_address };\n    },\n  },\n  Offer: {\n    async counterpartySnapshot(parent, _, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      return mutualCreditProvider.call('get_counterparty_snapshot', {\n        transaction_address: parent.id,\n      });\n    },\n  },\n  CounterpartySnapshot: {\n    lastHeaderId(parent) {\n      return parent.last_header_address;\n    },\n  },\n  Query: {\n    async offer(_, { transactionId }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const offer = await mutualCreditProvider.call('query_offer', {\n        transaction_address: transactionId,\n      });\n      return offerToTransaction(transactionId, offer);\n    },\n    async myTransactions(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const transactions = await mutualCreditProvider.call(\n        'query_my_transactions',\n        {}\n      );\n      return transactions.map((t) => ({ id: t[0], ...t[1] }));\n    },\n    async myOffers(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const offers = await mutualCreditProvider.call('query_my_offers', {});\n      console.log(offers);\n      return offers.map((offer) => offerToTransaction(offer[0], offer[1]));\n    },\n    async myBalance(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const result = await mutualCreditProvider.call('query_my_balance', {});\n      return result.hasOwnProperty('Ok') ? result.Ok : result;\n    },\n  },\n  Mutation: {\n    async createOffer(_, { creditorId, amount }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      return mutualCreditProvider.call('create_offer', {\n        creditor_address: creditorId,\n        amount,\n        timestamp: Math.floor(Date.now() / 1000),\n      });\n    },\n    async acceptOffer(_, { transactionId, approvedHeaderId }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      await mutualCreditProvider.call('accept_offer', {\n        transaction_address: transactionId,\n        approved_header_address: approvedHeaderId,\n      });\n\n      return transactionId;\n    },\n  },\n};\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property, css } from 'lit-element';\nimport { sharedStyles } from './sharedStyles';\nimport { Offer } from 'src/types';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { ApolloClient } from 'apollo-boost';\nimport { GET_OFFER_DETAIL, ACCEPT_OFFER } from 'src/graphql/queries';\nimport { Agent } from 'holochain-profiles';\n\nexport class MCOfferDetail extends moduleConnect(LitElement) {\n  @property({ type: String })\n  transactionId!: string;\n\n  @property({ type: String })\n  myAgentId!: string;\n\n  @property({ type: Object })\n  offer!: Offer;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: GET_OFFER_DETAIL,\n      variables: {\n        transactionId: this.transactionId,\n      },\n    });\n\n    this.offer = result.data.offer;\n    this.myAgentId = result.data.me.id;\n  }\n\n  acceptOffer() {\n    this.client.mutate({\n      mutation: ACCEPT_OFFER,\n      variables: {\n        transactionId: this.transactionId,\n        approvedHeaderId: this.offer.counterpartySnapshot.lastHeaderId,\n      },\n    });\n  }\n\n  isOutgoing() {\n    return this.offer.transaction.debtor.id === this.myAgentId;\n  }\n\n  getCounterparty(): Agent {\n    return this.offer.transaction.creditor.id === this.myAgentId\n      ? this.offer.transaction.debtor\n      : this.offer.transaction.creditor;\n  }\n\n  renderCounterparty() {\n    const cUsername = `@${this.getCounterparty().username}`;\n    return html`\n      <div class=\"row\">\n        <div class=\"column\">\n          <span class=\"item title\">\n            Offer ${this.isOutgoing() ? ' to ' : ' from '} ${cUsername}\n          </span>\n          <span class=\"item\">Agend ID: ${this.getCounterparty().id}</span>\n\n          <span class=\"item\">\n            Transaction amount: ${this.offer.transaction.amount} credits\n          </span>\n          <span class=\"item\">\n            Date:\n            ${new Date(\n              this.offer.transaction.timestamp * 1000\n            ).toLocaleDateString()}\n          </span>\n\n          <span class=\"item title\" style=\"margin-top: 8px;\"\n            >${cUsername} current status</span\n          >\n\n          <span class=\"item\">\n            Balance: ${this.offer.counterpartySnapshot.balance} credits\n          </span>\n          <span class=\"item\">\n            Transaction history is\n            ${this.offer.counterpartySnapshot.valid ? 'valid' : 'invalid'}\n          </span>\n          <span class=\"item\">\n            Offer is ${this.offer.counterpartySnapshot.executable ? '' : 'not'}\n            executable right now\n          </span>\n        </div>\n      </div>\n    `;\n  }\n\n  render() {\n    if (!this.offer)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    return html`\n      <div class=\"column\">\n        ${this.renderCounterparty()}\n\n        <div class=\"row\" style=\"margin-top: 4px;\">\n          <mwc-button\n            label=\"DECLINE\"\n            style=\"flex: 1;\"\n            @click=${() => this.acceptOffer()}\n          ></mwc-button>\n          <mwc-button\n            style=\"flex: 1;\"\n            .disabled=${!this.offer.counterpartySnapshot.executable}\n            label=\"ACCEPT\"\n            raised\n            @click=${() => this.acceptOffer()}\n          ></mwc-button>\n        </div>\n      </div>\n    `;\n  }\n}\n","import { Agent } from 'holochain-profiles';\nimport { ApolloClient, gql } from 'apollo-boost';\n\nexport const allAgentsAllowed: GetAllowedCreditors = async (client) => {\n  const result = await client.query({\n    query: gql`\n      {\n        allAgents {\n          id\n          username\n        }\n      }\n    `,\n  });\n\n  return result.data.allAgents;\n};\n\nexport type GetAllowedCreditors = (\n  client: ApolloClient<any>\n) => Promise<Agent[]>;\n\nexport interface Transaction {\n  id: string;\n\n  debtor: Agent;\n  creditor: Agent;\n  amount: number;\n  timestamp: number;\n}\n\nexport interface CounterpartySnapshot {\n  valid: boolean;\n  executable: boolean;\n  balance: number;\n  lastHeaderId: string;\n}\n\nexport interface Offer {\n  id: string;\n\n  transaction: Transaction;\n  state: string;\n\n  counterpartySnapshot: CounterpartySnapshot;\n}\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, query, property } from 'lit-element';\nimport { ApolloClient, gql } from 'apollo-boost';\n\nimport { Agent } from 'holochain-profiles';\nimport { Dialog } from '@material/mwc-dialog';\nimport { ApolloClientModule } from '@uprtcl/graphql';\n\nimport { MutualCreditBindings } from '../bindings';\nimport { GetAllowedCreditors } from '../types';\nimport { sharedStyles } from './sharedStyles';\n\nexport class MCAllowedCreditorList extends moduleConnect(LitElement) {\n  @query('#create-offer-dialog')\n  createOfferDialog!: Dialog;\n\n  @property({ type: String })\n  selectedCreditor: string | undefined = undefined;\n\n  @property({ type: Array })\n  agents: Agent[] | undefined = undefined;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const getAllowedCreditors: GetAllowedCreditors = this.request(\n      MutualCreditBindings.ValidAgentFilter\n    );\n\n    const agents = await getAllowedCreditors(this.client);\n\n    const result = await this.client.query({\n      query: gql`\n        {\n          me {\n            id\n          }\n        }\n      `,\n    });\n\n    this.agents = agents.filter((a) => a.id !== result.data.me.id);\n  }\n\n  renderCreateOffer() {\n    return html`<mwc-dialog id=\"create-offer-dialog\">\n      <hcmc-create-offer .creditor=${this.selectedCreditor}>\n      </hcmc-create-offer>\n    </mwc-dialog>`;\n  }\n\n  renderAgent(agent: Agent) {\n    return html`\n      <div class=\"row\" style=\"align-items: center;\">\n        <mwc-list-item style=\"flex: 1;\" twoline noninteractive>\n          <span>${agent.username}</span>\n          <span slot=\"secondary\">${agent.id}</span>\n        </mwc-list-item>\n\n        <mwc-button\n          label=\"Offer credits\"\n          style=\"padding-right: 16px;\"\n          @click=${() => {\n            this.selectedCreditor = agent.id;\n            this.createOfferDialog.open = true;\n          }}\n        ></mwc-button>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`<div class=\"column center-content\">\n      ${this.renderContent()}\n    </div>`;\n  }\n\n  renderContent() {\n    if (!this.agents)\n      return html`<div class=\"padding center-content\">\n        <mwc-circular-progress></mwc-circular-progress>\n      </div>`;\n\n    if (this.agents.length === 0)\n      return html`<div class=\"padding\">\n        <span>There are no agents to which to offer credits</span>\n      </div>`;\n\n    return html`\n      ${this.renderCreateOffer()}\n      <mwc-list>\n        ${this.agents.map(\n          (agent, i) => html`${this.renderAgent(agent)}\n          ${this.agents && i < this.agents.length - 1\n            ? html`<li divider padded role=\"separator\"></li> `\n            : html``} `\n        )}\n      </mwc-list>\n    `;\n  }\n}\n","import { interfaces } from 'inversify';\nimport { GraphQlSchemaModule } from '@uprtcl/graphql';\nimport { MicroModule, i18nextModule } from '@uprtcl/micro-orchestrator';\nimport {\n  HolochainConnectionModule,\n  createHolochainProvider,\n} from '@uprtcl/holochain-provider';\nimport { ProfilesModule } from 'holochain-profiles';\n\nimport { MCCreateOffer } from './elements/hcmc-create-offer';\nimport { MCPendingOfferList } from './elements/hcmc-pending-offer-list';\nimport { MCTransactionList } from './elements/hcmc-transaction-list';\n\nimport en from './i18n/en.json';\nimport { mutualCreditTypeDefs } from './graphql/schema';\nimport { MutualCreditBindings } from './bindings';\nimport { resolvers } from './graphql/resolvers';\nimport { MCOfferDetail } from './elements/hcmc-offer-detail';\nimport { GetAllowedCreditors, allAgentsAllowed } from './types';\nimport { MCAllowedCreditorList } from './elements/hcmc-allowed-creditor-list';\n\nexport class MutualCreditModule extends MicroModule {\n  static id = 'mutual-credit-module';\n\n  dependencies = [HolochainConnectionModule.id, ProfilesModule.id];\n\n  static bindings = MutualCreditBindings;\n\n  constructor(\n    protected instance: string,\n    protected agentFilter: GetAllowedCreditors = allAgentsAllowed\n  ) {\n    super();\n  }\n\n  async onLoad(container: interfaces.Container) {\n    const mutualCreditProvider = createHolochainProvider(\n      this.instance,\n      'transactor'\n    );\n\n    container\n      .bind(MutualCreditBindings.MutualCreditProvider)\n      .to(mutualCreditProvider);\n\n    container\n      .bind(MutualCreditBindings.ValidAgentFilter)\n      .toConstantValue(this.agentFilter);\n\n    customElements.define('hcmc-transaction-list', MCTransactionList);\n    customElements.define('hcmc-create-offer', MCCreateOffer);\n    customElements.define('hcmc-pending-offer-list', MCPendingOfferList);\n    customElements.define('hcmc-offer-detail', MCOfferDetail);\n    customElements.define('hcmc-allowed-creditor-list', MCAllowedCreditorList);\n  }\n\n  get submodules() {\n    return [\n      new GraphQlSchemaModule(mutualCreditTypeDefs, resolvers),\n      new i18nextModule('mutual-credit', { en: en }),\n    ];\n  }\n}\n"],"names":["gql"],"mappings":"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"}