{"version":3,"file":"hc-mutual-credit.es5.js","sources":["../src/graphql/queries.ts","../src/elements/sharedStyles.ts","../src/elements/hcmc-create-offer.ts","../src/elements/hcmc-pending-offer-list.ts","../src/elements/hcmc-transaction-list.ts","../src/graphql/schema.ts","../src/bindings.ts","../src/graphql/resolvers.ts","../src/elements/hcmc-offer-detail.ts","../src/elements/hcmc-my-balance.ts","../src/mutual-credit.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_MY_BALANCE = gql`\n  query GetMyBalance {\n    myBalance\n  }\n`;\n\nexport const GET_MY_TRANSACTIONS = gql`\n  query GetMyTransactions {\n    myTransactions {\n      id\n      debtor {\n        id\n      }\n      creditor {\n        id\n      }\n      amount\n      timestamp\n    }\n  }\n`;\n\nexport const GET_PENDING_OFFERS = gql`\n  query GetPendingOffers {\n    myOffers {\n      id\n      transaction {\n        id\n        debtor {\n          id\n        }\n        creditor {\n          id\n        }\n        amount\n        timestamp\n      }\n      state\n    }\n  }\n`;\n\nexport const GET_OFFER_DETAIL = gql`\n  query GetOfferDetail($transactionId: String!) {\n    offer(transactionId: $transactionId) {\n      id\n      transaction {\n        id\n        debtor {\n          id\n        }\n        creditor {\n          id\n        }\n        amount\n        timestamp\n      }\n\n      counterpartySnapshot {\n        executable\n        valid\n        balance\n        lastHeaderId\n      }\n\n      state\n    }\n  }\n`;\n\nexport const CREATE_OFFER = gql`\n  mutation CreateOffer($creditorId: ID!, $amount: Float!) {\n    createOffer(creditorId: $creditorId, amount: $amount)\n  }\n`;\n\nexport const ACCEPT_OFFER = gql`\n  mutation AcceptOffer($transactionId: ID!, $approvedHeaderId: ID!) {\n    acceptOffer(\n      transactionId: $transactionId\n      approvedHeaderId: $approvedHeaderId\n    )\n  }\n`;\n","import { css } from 'lit-element';\n\nexport const sharedStyles = css`\n  .column {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .fill {\n    flex: 1;\n  }\n\n  .center-content {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property, query } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { CREATE_OFFER } from 'src/graphql/queries';\n\nimport '@material/mwc-textfield';\nimport '@material/mwc-button';\nimport { TextFieldBase } from '@material/mwc-textfield/mwc-textfield-base';\nimport { sharedStyles } from './sharedStyles';\n\nexport class CreateOffer extends moduleConnect(LitElement) {\n  @query('#amount')\n  amountField!: TextFieldBase;\n\n  @query('#creditor')\n  creditorField!: TextFieldBase;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n  }\n\n  createOffer() {\n    this.client.mutate({\n      mutation: CREATE_OFFER,\n      variables: {\n        creditorId: this.creditorField.value,\n        amount: parseFloat(this.amountField.value),\n      },\n    });\n  }\n\n  render() {\n    return html`\n      <div class=\"column center-content\">\n        <mwc-textfield\n          style=\"padding: 16px 0;\"\n          label=\"Amount\"\n          type=\"number\"\n          id=\"amount\"\n          min=\"0.1\"\n          step=\"0.1\"\n          outlined\n        ></mwc-textfield>\n        <mwc-textfield\n          style=\"padding-bottom: 16px;\"\n          id=\"creditor\"\n          label=\"Creditor\"\n          outlined\n        ></mwc-textfield>\n\n        <mwc-button\n          label=\"CREATE OFFER\"\n          raised\n          @click=${() => this.createOffer()}\n        ></mwc-button>\n      </div>\n    `;\n  }\n}\n","import { LitElement, html, property } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\nimport { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { ApolloClientModule } from '@uprtcl/graphql';\n\nimport '@material/mwc-list';\nimport '@authentic/mwc-circular-progress';\n\nimport { GET_PENDING_OFFERS } from '../graphql/queries';\nimport { Transaction, Offer } from 'src/types';\nimport { sharedStyles } from './sharedStyles';\n\nexport class PendingOfferList extends moduleConnect(LitElement) {\n  client!: ApolloClient<any>;\n\n  @property({ type: Object, attribute: false })\n  offers!: Offer[];\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: GET_PENDING_OFFERS,\n    });\n    console.log(result);\n\n    this.offers = result.data.myOffers;\n  }\n\n  offerSelected(transactionId: string) {\n    this.dispatchEvent(\n      new CustomEvent('offer-selected', {\n        detail: { transactionId, composed: true, bubbles: true },\n      })\n    );\n  }\n\n  getPendingOffers() {\n    return this.offers.filter((offer) => offer.state !== 'Completed');\n  }\n\n  render() {\n    if (!this.offers)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    const pendingOffers = this.getPendingOffers();\n    return html`\n      <mwc-list>\n        ${pendingOffers.map(\n          (offer) => html`\n            <mwc-list-item @click=${() => this.offerSelected(offer.id)}>\n              <div class=\"column\">\n                <span>\n                  ${offer.transaction.debtor.id} =>\n                  ${offer.transaction.creditor.id}\n                </span>\n                <span>\n                  ${offer.transaction.amount}\n                </span>\n              </div>\n            </mwc-list-item>\n          `\n        )}\n      </mwc-list>\n    `;\n  }\n}\n","import { LitElement, property, html } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\n\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { moduleConnect } from '@uprtcl/micro-orchestrator';\n\nimport '@material/mwc-top-app-bar';\nimport '@material/mwc-list';\nimport '@authentic/mwc-circular-progress';\n\nimport { GET_MY_TRANSACTIONS } from '../graphql/queries';\nimport { Transaction } from '../types';\n\nexport class TransactionList extends moduleConnect(LitElement) {\n  @property({ type: Object, attribute: false })\n  transactions!: Array<Transaction>;\n\n  async firstUpdated() {\n    const client: ApolloClient<any> = this.request(\n      ApolloClientModule.bindings.Client\n    );\n    const result = await client.query({\n      query: GET_MY_TRANSACTIONS,\n    });\n\n    this.transactions = result.data.myTransactions;\n  }\n\n  render() {\n    if (!this.transactions)\n      return html` <mwc-circular-progress></mwc-circular-progress> `;\n\n    return html`\n      <mwc-list>\n        ${this.transactions.map(\n          (transaction) => html`\n            <mwc-list-item>\n              ${transaction.debtor.id} => ${transaction.creditor.id},\n              ${transaction.amount}\n            </mwc-list-item>\n            <mwc-list-divider></mwc-list-divider>\n          `\n        )}\n      </mwc-list>\n    `;\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const mutualCreditTypeDefs = gql`\n  scalar Date\n\n  enum OfferState {\n    Received\n    Pending\n    Declined\n    Approved\n    Completed\n  }\n\n  type Transaction {\n    id: ID!\n\n    debtor: Agent!\n    creditor: Agent!\n    amount: Float!\n    timestamp: Date!\n  }\n\n  type CounterpartySnapshot {\n    executable: Boolean!\n    balance: Float!\n    valid: Boolean!\n    lastHeaderId: ID!\n  }\n\n  type Offer {\n    id: ID!\n\n    transaction: Transaction!\n\n    counterpartySnapshot: CounterpartySnapshot\n\n    state: OfferState!\n  }\n\n  extend type Query {\n    myTransactions: [Transaction!]!\n    myOffers: [Offer!]!\n    myBalance: Float!\n    offer(transactionId: ID!): Offer!\n  }\n\n  extend type Mutation {\n    createOffer(creditorId: ID!, amount: Float!): ID!\n    declineOffer(transactionId: ID!): ID!\n    acceptOffer(transactionId: ID!, approvedHeaderId: ID!): ID!\n  }\n`;\n","export const MutualCreditBindings = {\n  MutualCreditProvider: \"mutual-credit-provider\"\n};\n","import { HolochainProvider } from '@uprtcl/holochain-provider';\n\nimport { MutualCreditBindings } from '../bindings';\n\nfunction offerToTransaction(id, offer) {\n  const state = offer.state;\n  return {\n    id,\n    transaction: {\n      id,\n      ...offer.transaction,\n    },\n    state: typeof state === 'object' ? Object.keys(state)[0] : state,\n  };\n}\n\nexport const resolvers = {\n  Transaction: {\n    creditor(parent) {\n      return parent.creditor_address;\n    },\n    debtor(parent) {\n      return parent.debtor_address;\n    },\n  },\n  Agent: {\n    id(parent) {\n      return parent;\n    },\n  },\n  Offer: {\n    async counterpartySnapshot(parent, _, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      return mutualCreditProvider.call('get_counterparty_snapshot', {\n        transaction_address: parent.id,\n      });\n    },\n  },\n  CounterpartySnapshot: {\n    lastHeaderId(parent) {\n      return parent.last_header_address;\n    },\n  },\n  Query: {\n    async offer(_, { transactionId }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const offer = await mutualCreditProvider.call('query_offer', {\n        transaction_address: transactionId,\n      });\n      return offerToTransaction(transactionId, offer);\n    },\n    async myTransactions(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      return mutualCreditProvider.call('query_my_transactions', {});\n    },\n    async myOffers(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const offers = await mutualCreditProvider.call('query_my_offers', {});\n      console.log(offers);\n      return offers.map((offer) => offerToTransaction(offer[0], offer[1]));\n    },\n    async myBalance(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const result = await mutualCreditProvider.call('query_my_balance', {});\n      return result.hasOwnProperty('Ok') ? result.Ok : result;\n    },\n  },\n  Mutation: {\n    async createOffer(_, { creditorId, amount }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      return mutualCreditProvider.call('create_offer', {\n        creditor_address: creditorId,\n        amount,\n        timestamp: Math.floor(Date.now() / 1000),\n      });\n    },\n    async acceptOffer(_, { transactionId, approvedHeaderId }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      await mutualCreditProvider.call('accept_offer', {\n        transaction_address: transactionId,\n        approved_header_address: approvedHeaderId,\n      });\n\n      return transactionId;\n    },\n  },\n};\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property } from 'lit-element';\nimport { sharedStyles } from './sharedStyles';\nimport { Offer } from 'src/types';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { ApolloClient } from 'apollo-boost';\nimport { GET_OFFER_DETAIL, ACCEPT_OFFER } from 'src/graphql/queries';\n\nexport class OfferDetail extends moduleConnect(LitElement) {\n  @property({ type: String })\n  transactionId!: string;\n\n  @property({ type: Object })\n  offer!: Offer;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: GET_OFFER_DETAIL,\n      variables: {\n        transactionId: this.transactionId,\n      },\n    });\n\n    this.offer = result.data.offer;\n  }\n\n  acceptOffer() {\n    this.client.mutate({\n      mutation: ACCEPT_OFFER,\n      variables: {\n        transactionId: this.transactionId,\n        approvedHeaderId: this.offer.counterpartySnapshot.lastHeaderId,\n      },\n    });\n  }\n\n  render() {\n    if (!this.offer)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    return html`\n      <div class=\"column\">\n        <span>${this.offer.counterpartySnapshot.balance}</span>\n        <mwc-button\n          .disabled=${!this.offer.counterpartySnapshot.executable}\n          label=\"ACCEPT\"\n          @click=${() => this.acceptOffer()}\n        ></mwc-button>\n      </div>\n    `;\n  }\n}\n","import { LitElement, html, property } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\nimport '@authentic/mwc-circular-progress';\nimport { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { ApolloClientModule } from '@uprtcl/graphql';\n\nimport { GET_MY_BALANCE } from '../graphql/queries';\n\nexport class MyBalance extends moduleConnect(LitElement) {\n  client!: ApolloClient<any>;\n\n  @property({ attribute: false, type: Number })\n  balance!: number;\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: GET_MY_BALANCE,\n    });\n\n    this.balance = result.data.myBalance;\n  }\n\n  render() {\n    if (this.balance === undefined)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    return html` <span>${this.balance}</span> `;\n  }\n}\n","import { interfaces } from 'inversify';\nimport { GraphQlSchemaModule } from '@uprtcl/graphql';\nimport { MicroModule, i18nextModule } from '@uprtcl/micro-orchestrator';\nimport {\n  HolochainConnectionModule,\n  createHolochainProvider,\n} from '@uprtcl/holochain-provider';\nimport { ProfilesModule } from 'holochain-profiles';\n\nimport { CreateOffer } from './elements/hcmc-create-offer';\nimport { PendingOfferList } from './elements/hcmc-pending-offer-list';\nimport { TransactionList } from './elements/hcmc-transaction-list';\n\nimport en from './i18n/en.json';\nimport { mutualCreditTypeDefs } from './graphql/schema';\nimport { MutualCreditBindings } from './bindings';\nimport { resolvers } from './graphql/resolvers';\nimport { OfferDetail } from './elements/hcmc-offer-detail';\nimport { MyBalance } from './elements/hcmc-my-balance';\n\nexport class MutualCreditModule extends MicroModule {\n  static id = 'mutual-credit-module';\n\n  dependencies = [HolochainConnectionModule.id, ProfilesModule.id];\n\n  static bindings = MutualCreditBindings;\n\n  constructor(protected instance: string) {\n    super();\n  }\n\n  async onLoad(container: interfaces.Container) {\n    const mutualCreditProvider = createHolochainProvider(\n      this.instance,\n      'transactor'\n    );\n\n    container\n      .bind(MutualCreditBindings.MutualCreditProvider)\n      .to(mutualCreditProvider);\n\n    customElements.define('hcmc-transaction-list', TransactionList);\n    customElements.define('hcmc-create-offer', CreateOffer);\n    customElements.define('hcmc-pending-offer-list', PendingOfferList);\n    customElements.define('hcmc-offer-detail', OfferDetail);\n    customElements.define('hcmc-my-balance', MyBalance);\n  }\n\n  get submodules() {\n    return [\n      new GraphQlSchemaModule(mutualCreditTypeDefs, resolvers),\n      new i18nextModule('mutual-credit', { en: en }),\n    ];\n  }\n}\n"],"names":[],"mappings":"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"}