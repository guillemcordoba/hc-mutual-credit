{"version":3,"file":"hc-mutual-credit.umd.js","sources":["../src/graphql/queries.ts","../src/elements/sharedStyles.ts","../src/elements/hcmc-create-offer.ts","../src/utils.ts","../src/elements/hcmc-pending-offer-list.ts","../src/elements/hcmc-transaction-list.ts","../src/graphql/schema.ts","../src/bindings.ts","../src/graphql/resolvers.ts","../src/elements/hcmc-offer-detail.ts","../src/types.ts","../src/elements/hcmc-allowed-creditor-list.ts","../src/mutual-credit.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_MY_BALANCE = gql`\n  query GetMyBalance {\n    me {\n      id\n      balance\n    }\n  }\n`;\n\nexport const GET_MY_TRANSACTIONS = gql`\n  query GetMyTransactions {\n    me {\n      id\n      transactions {\n        id\n        debtor {\n          id\n          username\n        }\n        creditor {\n          id\n          username\n        }\n        amount\n        timestamp\n      }\n    }\n  }\n`;\n\nexport const GET_PENDING_OFFERS = gql`\n  query GetPendingOffers {\n    me {\n      id\n      offers {\n        id\n        transaction {\n          id\n          debtor {\n            id\n            username\n          }\n          creditor {\n            id\n            username\n          }\n          amount\n          timestamp\n        }\n        state\n      }\n    }\n  }\n`;\n\nexport const GET_OFFER_DETAIL = gql`\n  query GetOfferDetail($transactionId: String!) {\n    me {\n      id\n    }\n\n    offer(transactionId: $transactionId) {\n      id\n      transaction {\n        id\n        debtor {\n          id\n          username\n        }\n        creditor {\n          id\n          username\n        }\n        amount\n        timestamp\n      }\n\n      counterpartySnapshot {\n        executable\n        valid\n        balance\n        lastHeaderId\n      }\n\n      state\n    }\n  }\n`;\n\nexport const CREATE_OFFER = gql`\n  mutation CreateOffer($creditorId: ID!, $amount: Float!) {\n    createOffer(creditorId: $creditorId, amount: $amount)\n  }\n`;\n\nexport const CONSENT_FOR_OFFER = gql`\n  mutation ConsentForOffer($transactionId: ID!) {\n    consentForOffer(transactionId: $transactionId)\n  }\n`;\n\nexport const ACCEPT_OFFER = gql`\n  mutation AcceptOffer($transactionId: ID!, $approvedHeaderId: ID!) {\n    acceptOffer(\n      transactionId: $transactionId\n      approvedHeaderId: $approvedHeaderId\n    )\n  }\n`;\n\nexport const CANCEL_OFFER = gql`\n  mutation CancelOffer($transactionId: ID!) {\n    cancelOffer(transactionId: $transactionId)\n  }\n`;\n","import { css } from 'lit-element';\n\nexport const sharedStyles = css`\n  .column {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .placeholder {\n    opacity: 0.7;\n  }\n\n  .fill {\n    flex: 1;\n  }\n\n  .center-content {\n    justify-content: center;\n    align-items: center;\n  }\n\n  .item {\n    margin-bottom: 16px;\n  }\n\n  .padding {\n    padding: 16px;\n  }\n\n  .title {\n    font-weight: bold;\n    font-size: 18px;\n  }\n`;\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property, query, PropertyValues } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { CREATE_OFFER } from 'src/graphql/queries';\n\nimport '@material/mwc-textfield';\nimport '@material/mwc-button';\nimport { TextFieldBase } from '@material/mwc-textfield/mwc-textfield-base';\nimport { sharedStyles } from './sharedStyles';\nimport { Agent } from 'holochain-profiles';\n\nexport class MCCreateOffer extends moduleConnect(LitElement) {\n  @query('#amount')\n  amountField!: TextFieldBase;\n\n  @query('#creditor')\n  creditorField!: TextFieldBase;\n\n  @property({ type: Boolean })\n  open: boolean = false;\n\n  @property({ type: String })\n  creditor: Agent | undefined = undefined;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    this.amountField.validityTransform = (newValue) => {\n      this.requestUpdate();\n      try {\n        const amount = parseFloat(newValue);\n        if (amount > 0) return { valid: true };\n      } catch (e) {}\n      this.amountField.setCustomValidity(\n        `Offer amount has to be greater than 0`\n      );\n      return {\n        valid: false,\n      };\n    };\n  }\n\n  async createOffer() {\n    const creditorId = this.creditorField.value;\n    const amount = parseFloat(this.amountField.value);\n    await this.client.mutate({\n      mutation: CREATE_OFFER,\n      variables: {\n        creditorId,\n        amount,\n      },\n    });\n\n    this.dispatchEvent(\n      new CustomEvent('offer-created', {\n        detail: { creditorId, amount },\n        composed: true,\n        bubbles: true,\n      })\n    );\n  }\n\n  render() {\n    return html`\n      <mwc-dialog\n        .open=${this.open}\n        @closed=${() => (this.open = false)}\n        heading=\"Create New Offer\"\n      >\n        <div class=\"column center-content\">\n          <span>\n            You are about to create an offer\n            ${this.creditor ? `to @${this.creditor.username}` : ''}, which would\n            lower your balance by the amount of the transaction and raise the\n            creditor's value by the same amount.\n            <br /><br />\n            This will let the creditor scan your source chain to validate your\n            transaction history.\n          </span>\n          <mwc-textfield\n            .disabled=${this.creditor !== undefined}\n            .value=${this.creditor && this.creditor.id}\n            style=\"padding: 16px 0; width: 24em;\"\n            id=\"creditor\"\n            label=\"Creditor\"\n            autoValidate\n            outlined\n          ></mwc-textfield>\n\n          <mwc-textfield\n            style=\"padding-top: 16px;\"\n            label=\"Amount\"\n            type=\"number\"\n            id=\"amount\"\n            min=\"0.1\"\n            step=\"0.1\"\n            autoValidate\n            outlined\n          ></mwc-textfield>\n        </div>\n\n        <mwc-button slot=\"secondaryAction\" dialogAction=\"cancel\">\n          Cancel\n        </mwc-button>\n        <mwc-button\n          .disabled=${!this.amountField || !this.amountField.validity.valid}\n          slot=\"primaryAction\"\n          @click=${() => this.createOffer()}\n          dialogAction=\"create\"\n        >\n          Create Offer\n        </mwc-button>\n      </mwc-dialog>\n    `;\n  }\n}\n","export function dateString(timestamp: number): string {\n  return `${new Date(timestamp * 1000).toLocaleTimeString().substring(0, 5)}h,\n                  ${new Date(timestamp * 1000).toDateString()}`;\n}\n","import { LitElement, html, property, css } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\nimport { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { ApolloClientModule } from '@uprtcl/graphql';\n\nimport '@material/mwc-list';\nimport '@authentic/mwc-circular-progress';\n\nimport { GET_PENDING_OFFERS } from '../graphql/queries';\nimport { Offer } from 'src/types';\nimport { sharedStyles } from './sharedStyles';\nimport { Agent } from 'holochain-profiles';\nimport { dateString } from 'src/utils';\n\nexport class MCPendingOfferList extends moduleConnect(LitElement) {\n  client!: ApolloClient<any>;\n\n  @property({ type: String })\n  myAgentId!: string;\n\n  @property({ type: Object, attribute: false })\n  offers!: Offer[];\n\n  @property({ type: String })\n  lastSelectedOfferId: string | undefined = undefined;\n\n  static get styles() {\n    return [\n      sharedStyles,\n      css`\n        :host {\n          display: flex;\n        }\n      `,\n    ];\n  }\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    this.client\n      .watchQuery({\n        query: GET_PENDING_OFFERS,\n        fetchPolicy: 'network-only',\n      })\n      .subscribe((result) => {\n        this.myAgentId = result.data.me.id;\n        this.offers = result.data.me.offers.filter(\n          (offer) => offer.state !== 'Completed' && offer.state !== 'Canceled'\n        );\n      });\n  }\n\n  renderPlaceholder(type: string) {\n    return html`<span style=\"padding-top: 16px;\">\n      You have no ${type.toLowerCase()} offers\n    </span>`;\n  }\n\n  offerSelected(transactionId: string) {\n    this.dispatchEvent(\n      new CustomEvent('offer-selected', {\n        detail: { transactionId, composed: true, bubbles: true },\n      })\n    );\n    this.lastSelectedOfferId = transactionId;\n  }\n\n  isOutgoing(offer: Offer): boolean {\n    return offer.transaction.debtor.id === this.myAgentId;\n  }\n\n  getOutgoing(): Offer[] {\n    return this.offers.filter((offer) => this.isOutgoing(offer));\n  }\n\n  getIncoming(): Offer[] {\n    return this.offers.filter((offer) => !this.isOutgoing(offer));\n  }\n\n  counterparty(offer: Offer): Agent {\n    return offer.transaction.creditor.id === this.myAgentId\n      ? offer.transaction.debtor\n      : offer.transaction.creditor;\n  }\n\n  renderOfferList(title: string, offers: Offer[]) {\n    return html`<div class=\"column\">\n      <span class=\"title\">${title} offers</span>\n\n      ${offers.length === 0\n        ? this.renderPlaceholder(title)\n        : html`\n            <mwc-list>\n              ${offers.map(\n                (offer, index) => html`\n                  <mwc-list-item\n                    @click=${() => this.offerSelected(offer.id)}\n                    graphic=\"avatar\"\n                    twoline\n                    .activated=${this.lastSelectedOfferId &&\n                    this.lastSelectedOfferId === offer.id}\n                  >\n                    <span>\n                      ${offer.transaction.amount} credits\n                      ${this.isOutgoing(offer) ? 'to' : 'from'}\n                      @${this.counterparty(offer).username}\n                    </span>\n                    <span slot=\"secondary\">\n                      ${dateString(offer.transaction.timestamp)}\n                    </span>\n                    <mwc-icon\n                      slot=\"graphic\"\n                      .style=\"color: ${this.isOutgoing(offer)\n                        ? 'red'\n                        : 'green'}\"\n                      >${this.isOutgoing(offer)\n                        ? 'call_made'\n                        : 'call_received'}</mwc-icon\n                    >\n                  </mwc-list-item>\n                  ${index < offers.length - 1\n                    ? html`<li divider padded role=\"separator\"></li> `\n                    : html``}\n                `\n              )}\n            </mwc-list>\n          `}\n    </div>`;\n  }\n\n  render() {\n    if (!this.offers)\n      return html`<div class=\"column fill center-content\">\n        <mwc-circular-progress></mwc-circular-progress>\n        <span class=\"placeholder\" style=\"margin-top: 18px;\"\n          >Fetching pending offers...</span\n        >\n      </div>`;\n\n    return html`<div class=\"column fill\">\n      <div style=\"margin-bottom: 24px;\">\n        ${this.renderOfferList('Incoming', this.getIncoming())}\n      </div>\n      ${this.renderOfferList('Outgoing', this.getOutgoing())}\n    </div>`;\n  }\n}\n","import { LitElement, property, html } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\n\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { moduleConnect } from '@uprtcl/micro-orchestrator';\n\nimport '@material/mwc-top-app-bar';\nimport '@material/mwc-list';\nimport '@authentic/mwc-circular-progress';\n\nimport { GET_MY_TRANSACTIONS } from '../graphql/queries';\nimport { Transaction } from '../types';\nimport { Agent } from 'holochain-profiles';\nimport { sharedStyles } from './sharedStyles';\nimport { dateString } from 'src/utils';\n\nexport class MCTransactionList extends moduleConnect(LitElement) {\n  @property({ type: String })\n  myAgentId!: string;\n\n  @property({ type: Object, attribute: false })\n  transactions!: Array<Transaction>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async firstUpdated() {\n    const client: ApolloClient<any> = this.request(\n      ApolloClientModule.bindings.Client\n    );\n    const result = await client.query({\n      query: GET_MY_TRANSACTIONS,\n      fetchPolicy: 'network-only',\n    });\n\n    this.myAgentId = result.data.me.id;\n    this.transactions = result.data.me.transactions.sort(\n      (t1, t2) => t2.timestamp - t1.timestamp\n    );\n  }\n\n  isOutgoing(transaction: Transaction) {\n    return transaction.debtor.id === this.myAgentId;\n  }\n\n  getCounterparty(transaction: Transaction): Agent {\n    return transaction.creditor.id === this.myAgentId\n      ? transaction.debtor\n      : transaction.creditor;\n  }\n\n  render() {\n    return html`<div class=\"column center-content\">\n      ${this.renderContent()}\n    </div>`;\n  }\n\n  renderContent() {\n    if (!this.transactions)\n      return html`\n        <div class=\"padding center-content column\">\n          <mwc-circular-progress></mwc-circular-progress>\n          <span class=\"placeholder\" style=\"margin-top: 18px;\"\n            >Fetching transaction history...</span\n          >\n        </div>\n      `;\n\n    if (this.transactions.length === 0)\n      return html`<div class=\"padding\">\n        <span>You have no transactions in your history</span>\n      </div>`;\n\n    return html`\n      <mwc-list style=\"width: 100%;\">\n        ${this.transactions.map(\n          (transaction, i) => html`\n            <div class=\"row\" style=\"align-items: center;\">\n              <mwc-list-item\n                twoline\n                noninteractive\n                graphic=\"avatar\"\n                style=\"flex: 1;\"\n              >\n                <span>\n                  ${this.isOutgoing(transaction) ? 'To ' : 'From '}\n                  @${this.getCounterparty(transaction).username} on\n                  ${dateString(transaction.timestamp)}\n                </span>\n                <span slot=\"secondary\"\n                  >${this.getCounterparty(transaction).id}\n                </span>\n                <mwc-icon\n                  slot=\"graphic\"\n                  .style=\"color: ${this.isOutgoing(transaction)\n                    ? 'red'\n                    : 'green'}\"\n                  >${this.isOutgoing(transaction)\n                    ? 'call_made'\n                    : 'call_received'}</mwc-icon\n                >\n              </mwc-list-item>\n\n              <span style=\"font-size: 20px; margin-right: 24px;\">\n                ${this.isOutgoing(transaction) ? '-' : '+'}${transaction.amount}\n                credits\n              </span>\n            </div>\n            ${i < this.transactions.length - 1\n              ? html`<li divider padded role=\"separator\"></li> `\n              : html``}\n          `\n        )}\n      </mwc-list>\n    `;\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const mutualCreditTypeDefs = gql`\n  scalar Date\n\n  enum OfferState {\n    Received\n    Pending\n    Canceled\n    Approved\n    Completed\n  }\n\n  type Transaction {\n    id: ID!\n\n    debtor: Agent!\n    creditor: Agent!\n    amount: Float!\n    timestamp: Date!\n  }\n\n  type CounterpartySnapshot {\n    executable: Boolean!\n    balance: Float!\n    valid: Boolean!\n    lastHeaderId: ID!\n  }\n\n  type Offer {\n    id: ID!\n\n    transaction: Transaction!\n\n    counterpartySnapshot: CounterpartySnapshot\n\n    state: OfferState!\n  }\n\n  extend type Me {\n    transactions: [Transaction!]!\n    offers: [Offer!]!\n    balance: Float!\n  }\n\n  extend type Query {\n    offer(transactionId: ID!): Offer!\n  }\n\n  extend type Mutation {\n    createOffer(creditorId: ID!, amount: Float!): ID!\n    consentForOffer(transactionId: ID!): ID!\n    cancelOffer(transactionId: ID!): ID!\n    acceptOffer(transactionId: ID!, approvedHeaderId: ID!): ID!\n  }\n`;\n","export const MutualCreditBindings = {\n  MutualCreditProvider: 'mutual-credit-provider',\n  ValidAgentFilter: 'valid-agent-filter',\n};\n","import { HolochainProvider } from '@uprtcl/holochain-provider';\n\nimport { MutualCreditBindings } from '../bindings';\n\nfunction offerToTransaction(id, offer) {\n  const state = offer.state;\n  return {\n    id,\n    transaction: {\n      id,\n      ...offer.transaction,\n    },\n    state: typeof state === 'object' ? Object.keys(state)[0] : state,\n  };\n}\n\nexport const resolvers = {\n  Transaction: {\n    creditor(parent) {\n      return { id: parent.creditor_address };\n    },\n    debtor(parent) {\n      return { id: parent.debtor_address };\n    },\n  },\n  Offer: {\n    async counterpartySnapshot(parent, _, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      try {\n        const snapshot = await mutualCreditProvider.call(\n          'get_counterparty_snapshot',\n          {\n            transaction_address: parent.id,\n          }\n        );\n        return snapshot;\n      } catch (e) {\n        if (e.message.includes('Offer is not pending')) return null;\n      }\n    },\n  },\n  CounterpartySnapshot: {\n    lastHeaderId(parent) {\n      return parent.last_header_address;\n    },\n  },\n  Query: {\n    async offer(_, { transactionId }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const offer = await mutualCreditProvider.call('query_offer', {\n        transaction_address: transactionId,\n      });\n      return offerToTransaction(transactionId, offer);\n    },\n  },\n  Me: {\n    async transactions(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const transactions = await mutualCreditProvider.call(\n        'query_my_transactions',\n        {}\n      );\n      return transactions.map((t) => ({ id: t[0], ...t[1] }));\n    },\n    async offers(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const offers = await mutualCreditProvider.call('query_my_offers', {});\n      console.log(offers);\n      return offers.map((offer) => offerToTransaction(offer[0], offer[1]));\n    },\n    async balance(_, __, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      const result = await mutualCreditProvider.call('query_my_balance', {});\n      return result.hasOwnProperty('Ok') ? result.Ok : result;\n    },\n  },\n  Mutation: {\n    async createOffer(_, { creditorId, amount }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      return mutualCreditProvider.call('create_offer', {\n        creditor_address: creditorId,\n        amount,\n        timestamp: Math.floor(Date.now() / 1000),\n      });\n    },\n    async acceptOffer(_, { transactionId, approvedHeaderId }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      await mutualCreditProvider.call('accept_offer', {\n        transaction_address: transactionId,\n        approved_header_address: approvedHeaderId,\n      });\n\n      return transactionId;\n    },\n    async consentForOffer(_, { transactionId }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      await mutualCreditProvider.call('consent_for_offer', {\n        transaction_address: transactionId,\n      });\n\n      return transactionId;\n    },\n    async cancelOffer(_, { transactionId }, { container }) {\n      const mutualCreditProvider: HolochainProvider = container.get(\n        MutualCreditBindings.MutualCreditProvider\n      );\n\n      await mutualCreditProvider.call('cancel_offer', {\n        transaction_address: transactionId,\n      });\n\n      return transactionId;\n    },\n  },\n};\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property, css, PropertyValues } from 'lit-element';\nimport { sharedStyles } from './sharedStyles';\nimport { Offer } from 'src/types';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport {\n  GET_OFFER_DETAIL,\n  ACCEPT_OFFER,\n  CANCEL_OFFER,\n  GET_PENDING_OFFERS,\n  CONSENT_FOR_OFFER,\n} from 'src/graphql/queries';\nimport { Agent } from 'holochain-profiles';\nimport { dateString } from 'src/utils';\n\nexport class MCOfferDetail extends moduleConnect(LitElement) {\n  @property({ type: String })\n  transactionId!: string;\n\n  @property({ type: String })\n  myAgentId!: string;\n\n  @property({ type: Object })\n  offer!: Offer;\n\n  @property({ type: Boolean })\n  accepting: boolean = false;\n\n  @property({ type: Boolean })\n  consenting: boolean = false;\n\n  @property({ type: Boolean })\n  canceling: boolean = false;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  updated(changedValues: PropertyValues) {\n    super.updated(changedValues);\n\n    if (changedValues.has('transactionId') && this.transactionId !== null) {\n      this.loadOffer();\n    }\n  }\n\n  async loadOffer() {\n    this.offer = undefined as any;\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: GET_OFFER_DETAIL,\n      variables: {\n        transactionId: this.transactionId,\n      },\n      fetchPolicy: 'network-only',\n    });\n\n    this.offer = result.data.offer;\n    this.myAgentId = result.data.me.id;\n  }\n\n  acceptOffer() {\n    this.accepting = true;\n\n    this.client\n      .mutate({\n        mutation: ACCEPT_OFFER,\n        variables: {\n          transactionId: this.transactionId,\n          approvedHeaderId: this.offer.counterpartySnapshot.lastHeaderId,\n        },\n        update: (cache, result) => {\n          const pendingOffers: any = cache.readQuery({\n            query: GET_PENDING_OFFERS,\n          });\n\n          pendingOffers.me.offers.find((o) => o.id === this.offer.id).state =\n            'Completed';\n\n          cache.writeQuery({\n            query: GET_PENDING_OFFERS,\n            data: pendingOffers,\n          });\n        },\n      })\n      .then(() => {\n        this.dispatchEvent(\n          new CustomEvent('offer-accepted', {\n            detail: { transactionId: this.transactionId },\n            composed: true,\n            bubbles: true,\n          })\n        );\n      })\n      .finally(() => (this.accepting = false));\n  }\n\n  consentOffer() {\n    this.consenting = true;\n\n    this.client\n      .mutate({\n        mutation: CONSENT_FOR_OFFER,\n        variables: {\n          transactionId: this.transactionId,\n        },\n      })\n      .then(() => {\n        this.dispatchEvent(\n          new CustomEvent('offer-consented', {\n            detail: { transactionId: this.transactionId },\n            composed: true,\n            bubbles: true,\n          })\n        );\n        this.loadOffer();\n      })\n      .finally(() => (this.consenting = false));\n  }\n\n  async cancelOffer() {\n    (this.canceling = true),\n      await this.client.mutate({\n        mutation: CANCEL_OFFER,\n        variables: {\n          transactionId: this.transactionId,\n        },\n        update: (cache, result) => {\n          const pendingOffers: any = cache.readQuery({\n            query: GET_PENDING_OFFERS,\n          });\n\n          const offers = pendingOffers.me.offers.filter(\n            (o) => o.id !== this.transactionId\n          );\n\n          pendingOffers.me.offers = offers;\n\n          cache.writeQuery({ query: GET_PENDING_OFFERS, data: pendingOffers });\n        },\n      });\n\n    this.dispatchEvent(\n      new CustomEvent('offer-canceled', {\n        detail: { transactionId: this.transactionId },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  isOutgoing() {\n    return this.offer.transaction.debtor.id === this.myAgentId;\n  }\n\n  getCounterparty(): Agent {\n    return this.offer.transaction.creditor.id === this.myAgentId\n      ? this.offer.transaction.debtor\n      : this.offer.transaction.creditor;\n  }\n\n  renderCounterparty() {\n    const cUsername = `@${this.getCounterparty().username}`;\n    return html`\n      <div class=\"row\">\n        <div class=\"column\">\n          <span class=\"item title\">\n            Offer ${this.isOutgoing() ? ' to ' : ' from '} ${cUsername}\n          </span>\n          <span class=\"item\">Agend ID: ${this.getCounterparty().id}</span>\n\n          <span class=\"item\">\n            Transaction amount: ${this.offer.transaction.amount} credits\n          </span>\n          <span class=\"item\">\n            Date: ${dateString(this.offer.transaction.timestamp)}\n          </span>\n\n          <span class=\"item title\" style=\"margin-top: 16px;\"\n            >${cUsername} current status</span\n          >\n\n          ${this.offer.counterpartySnapshot\n            ? html`\n                <span class=\"item\">\n                  Balance: ${this.offer.counterpartySnapshot.balance} credits\n                </span>\n                <span class=\"item\">\n                  Transaction history is\n                  ${this.offer.counterpartySnapshot.valid ? 'valid' : 'invalid'}\n                </span>\n                <span class=\"item\">\n                  Offer is\n                  ${this.offer.counterpartySnapshot.executable ? '' : 'not'}\n                  executable right now\n                </span>\n              `\n            : html`\n                <span class=\"item\">\n                  ${this.offer.state !== 'Received'\n                    ? `${cUsername} has `\n                    : 'You have '}\n                  not consented for to share\n                  ${this.offer.state !== 'Received' ? 'their' : 'your'} source\n                  chain yet\n                </span>\n              `}\n        </div>\n      </div>\n    `;\n  }\n\n  placeholderMessage() {\n    if (this.accepting) return 'Accepting offer...';\n    if (this.canceling) return 'Canceling offer...';\n    if (this.consenting) return 'Consenting for offer...';\n    return 'Fetching and verifying counterparty chain...';\n  }\n\n  renderOfferForwardAction() {\n    if (this.isOutgoing())\n      return html`<mwc-button\n        style=\"flex: 1;\"\n        .label=\"Awaiting for ${this.offer.counterpartySnapshot\n          ? 'approval'\n          : 'consent'}\"\n        disabled\n        raised\n      >\n      </mwc-button>`;\n    if (this.offer.state == 'Received')\n      return html`<mwc-button\n        style=\"flex: 1;\"\n        label=\"CONSENT TO SHOW CHAIN\"\n        raised\n        @click=${() => this.consentOffer()}\n      ></mwc-button>`;\n    return html`\n      <mwc-button\n        style=\"flex: 1;\"\n        .disabled=${!this.offer.counterpartySnapshot.executable ||\n        this.offer.state !== 'Pending'}\n        label=\"ACCEPT AND COMPLETE TRANSACTION\"\n        raised\n        @click=${() => this.acceptOffer()}\n      ></mwc-button>\n    `;\n  }\n\n  render() {\n    if (!this.offer || this.accepting || this.canceling || this.consenting)\n      return html`<div class=\"column fill center-content\">\n        <mwc-circular-progress></mwc-circular-progress>\n        <span style=\"margin-top: 18px;\" class=\"placeholder\">${this.placeholderMessage()}</span>\n      </div>`;\n\n    return html`\n      <div class=\"column\">\n        ${this.renderCounterparty()}\n        <div class=\"row center-content\" style=\"margin-top: 24px;\">\n          <mwc-button\n            label=\"CANCEL OFFER\"\n            style=\"flex: 1; margin-right: 16px;\"\n            @click=${() => this.cancelOffer()}\n          ></mwc-button>\n          ${this.renderOfferForwardAction()}\n        </div>\n      </div>\n    `;\n  }\n}\n","import { Agent } from 'holochain-profiles';\nimport { ApolloClient, gql } from 'apollo-boost';\n\nexport const allAgentsAllowed: GetAllowedCreditors = async (client) => {\n  const result = await client.query({\n    query: gql`\n      {\n        allAgents {\n          id\n          username\n        }\n      }\n    `,\n  });\n\n  return result.data.allAgents;\n};\n\nexport type GetAllowedCreditors = (\n  client: ApolloClient<any>\n) => Promise<Agent[]>;\n\nexport interface Transaction {\n  id: string;\n\n  debtor: Agent;\n  creditor: Agent;\n  amount: number;\n  timestamp: number;\n}\n\nexport interface CounterpartySnapshot {\n  valid: boolean;\n  executable: boolean;\n  balance: number;\n  lastHeaderId: string;\n}\n\nexport interface Offer {\n  id: string;\n\n  transaction: Transaction;\n  state: string;\n\n  counterpartySnapshot: CounterpartySnapshot;\n}\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, query, property } from 'lit-element';\nimport { ApolloClient, gql } from 'apollo-boost';\n\nimport { Agent } from 'holochain-profiles';\nimport { Dialog } from '@material/mwc-dialog';\nimport { ApolloClientModule } from '@uprtcl/graphql';\n\nimport { MutualCreditBindings } from '../bindings';\nimport { GetAllowedCreditors } from '../types';\nimport { sharedStyles } from './sharedStyles';\nimport { MCCreateOffer } from './hcmc-create-offer';\n\nexport class MCAllowedCreditorList extends moduleConnect(LitElement) {\n  @query('#create-offer-dialog')\n  createOfferDialog!: MCCreateOffer;\n\n  @property({ type: Object })\n  selectedCreditor: Agent | undefined = undefined;\n\n  @property({ type: Array })\n  agents: Agent[] | undefined = undefined;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const getAllowedCreditors: GetAllowedCreditors = this.request(\n      MutualCreditBindings.ValidAgentFilter\n    );\n\n    const agents = await getAllowedCreditors(this.client);\n\n    const result = await this.client.query({\n      query: gql`\n        {\n          me {\n            id\n          }\n        }\n      `,\n    });\n\n    this.agents = agents.filter((a) => a.id !== result.data.me.id);\n  }\n\n  renderCreateOffer() {\n    return html`\n      <hcmc-create-offer\n        id=\"create-offer-dialog\"\n        .creditor=${this.selectedCreditor}\n        @offer-created=${() => (this.createOfferDialog.open = false)}\n      >\n      </hcmc-create-offer>\n    `;\n  }\n\n  renderAgent(agent: Agent) {\n    return html`\n      <div class=\"row\" style=\"align-items: center;\">\n        <mwc-list-item style=\"flex: 1;\" twoline noninteractive graphic=\"avatar\">\n          <span>@${agent.username}</span>\n          <span slot=\"secondary\">${agent.id}</span>\n          <mwc-icon slot=\"graphic\">person</mwc-icon>\n        </mwc-list-item>\n\n        <mwc-button\n          label=\"Offer credits\"\n          style=\"padding-right: 16px;\"\n          outlined\n          @click=${() => {\n            this.selectedCreditor = agent;\n            this.createOfferDialog.open = true;\n          }}\n        >\n          <mwc-icon style=\"padding-top: 3px;\" slot=\"trailingIcon\">send</mwc-icon>\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`<div class=\"column center-content\">\n      ${this.renderContent()}\n    </div>`;\n  }\n\n  renderContent() {\n    if (!this.agents)\n      return html`<div class=\"padding center-content\">\n        <mwc-circular-progress></mwc-circular-progress>\n      </div>`;\n\n    if (this.agents.length === 0)\n      return html`<div class=\"padding\">\n        <span>There are no agents to which to offer credits</span>\n      </div>`;\n\n    return html`\n      ${this.renderCreateOffer()}\n      <mwc-list style=\"width: 100%;\">\n        ${this.agents.map(\n          (agent, i) => html`${this.renderAgent(agent)}\n          ${this.agents && i < this.agents.length - 1\n            ? html`<li divider padded role=\"separator\"></li> `\n            : html``} `\n        )}\n      </mwc-list>\n    `;\n  }\n}\n","import { interfaces } from 'inversify';\nimport { GraphQlSchemaModule } from '@uprtcl/graphql';\nimport { MicroModule, i18nextModule } from '@uprtcl/micro-orchestrator';\nimport {\n  HolochainConnectionModule,\n  createHolochainProvider,\n} from '@uprtcl/holochain-provider';\nimport { ProfilesModule } from 'holochain-profiles';\n\nimport { MCCreateOffer } from './elements/hcmc-create-offer';\nimport { MCPendingOfferList } from './elements/hcmc-pending-offer-list';\nimport { MCTransactionList } from './elements/hcmc-transaction-list';\n\nimport en from './i18n/en.json';\nimport { mutualCreditTypeDefs } from './graphql/schema';\nimport { MutualCreditBindings } from './bindings';\nimport { resolvers } from './graphql/resolvers';\nimport { MCOfferDetail } from './elements/hcmc-offer-detail';\nimport { GetAllowedCreditors, allAgentsAllowed } from './types';\nimport { MCAllowedCreditorList } from './elements/hcmc-allowed-creditor-list';\n\nexport class MutualCreditModule extends MicroModule {\n  static id = 'mutual-credit-module';\n\n  dependencies = [HolochainConnectionModule.id, ProfilesModule.id];\n\n  static bindings = MutualCreditBindings;\n\n  constructor(\n    protected instance: string,\n    protected agentFilter: GetAllowedCreditors = allAgentsAllowed\n  ) {\n    super();\n  }\n\n  async onLoad(container: interfaces.Container) {\n    const mutualCreditProvider = createHolochainProvider(\n      this.instance,\n      'transactor'\n    );\n\n    container\n      .bind(MutualCreditBindings.MutualCreditProvider)\n      .to(mutualCreditProvider);\n\n    container\n      .bind(MutualCreditBindings.ValidAgentFilter)\n      .toConstantValue(this.agentFilter);\n\n    customElements.define('hcmc-transaction-list', MCTransactionList);\n    customElements.define('hcmc-create-offer', MCCreateOffer);\n    customElements.define('hcmc-pending-offer-list', MCPendingOfferList);\n    customElements.define('hcmc-offer-detail', MCOfferDetail);\n    customElements.define('hcmc-allowed-creditor-list', MCAllowedCreditorList);\n  }\n\n  get submodules() {\n    return [\n      new GraphQlSchemaModule(mutualCreditTypeDefs, resolvers),\n      new i18nextModule('mutual-credit', { en: en }),\n    ];\n  }\n}\n"],"names":["css","moduleConnect","LitElement","ApolloClientModule","html","query","TextFieldBase","property","gql","MicroModule","HolochainConnectionModule","ProfilesModule","createHolochainProvider","GraphQlSchemaModule","i18nextModule"],"mappings":"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"}